plugins {
    id 'ml-loader'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT'
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor("org.spongepowered:mixin:0.8.5-SNAPSHOT:processor")
}

minecraft {
    mappings channel: 'official', version: minecraft_version

    copyIdeResources = true // Calls processResources when in dev

    var at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) accessTransformer = at

    runs {
        client {
            workingDirectory project.file('runs/client')
            ideaModule "${rootProject.name}.${project.name}.main"
            taskName 'Client'
            mods {
                modClientRun {
                    source sourceSets.main
                    source project(":common").sourceSets.main
                }
            }
        }
    }
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}

publishMods {
    file = jar.archiveFile
    modLoaders.add("forge")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            pom.withXml {
                asNode().dependencies.each { node ->
                    node.replaceNode {}
                }
            }
        }
    }
}